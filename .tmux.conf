# per farlo ricaricare per bene bisogna chiudere tutte le instanze di tmux
# per qualche dannato motivo!

# usa Ctrl-space invece di b
set -g prefix C-Space

# rimappa i comandi per lo split in cose piu semplici
unbind %
unbind '"'
bind | split-window -h
bind _ split-window -v

# rinumera le finestre se una viene chiusa
set -g renumber-windows on
# parte a contare da 1, semplice per i tasti
set -g base-index 1
setw -g pane-base-index 1
# fa in modo che lo zero vada alla finestra 10
# (è nel giusto ordine e le facciamo partire da 1)
bind 0 select-window -t :10

# il mouse parte non attiv, ma può essere acceso o spento a piacere
set -g mouse off
# Toggle mouse on
bind-key M \
  set -g mouse on \;\
  display-message 'Mouse: ON'
# Toggle mouse off
bind-key m \
  set -g mouse off \;\
  display-message 'Mouse: OFF'

# Monitor window activity. Windows with activity are highlighted in the status line:
setw -g monitor-activity on

# fa in modo che il tasto Esc sia più reattivo, è fondamentale per neovim!
set -sg escape-time 0

# Enable 256 colors in the terminal emulator:
set -g default-terminal "screen-256color"

# Set the repeat-time to 0 second to disable command repeat without prefix-key
# By default it is 500 ms.
set -g repeat-time 200

# -----------------------------------------------------------------------------
# ESTETICA DI TMUX
# -----------------------------------------------------------------------------
# questo script bash visualizza la matrice di tutti i colori disponibili con il nome corrispondente
# for i in {0..255}; do  printf "\x1b[38;5;${i}mcolour%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done

# #  modes
# setw -g clock-mode-colour colour5
# setw -g mode-style 'fg=colour1 bg=colour18 bold'
#
# # panes
# set -g pane-border-style 'fg=colour19 bg=colour0'
# set -g pane-active-border-style 'bg=colour0 fg=colour9'
#
# # statusbar
# set -g status-position bottom
# set -g status-justify left
# set -g status-style 'bg=colour18 fg=colour137 dim'
# set -g status-left ''
# set -g status-right '#[fg=colour233,bg=colour19] %d/%m #[fg=colour233,bg=colour8] %H:%M:%S '
# set -g status-right-length 50
# set -g status-left-length 20
#
# setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
# setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
#
# setw -g window-status-style 'fg=colour9 bg=colour18'
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
#
# setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
#
# # messages
# set -g message-style 'fg=colour232 bg=colour16 bold'

#colors
set -g status-style bg=colour235,fg=colour136
setw -g window-status-style fg=colour244
setw -g window-status-current-style fg=colour166
setw -g window-status-activity-style fg=colour61
setw -g window-status-bell-style fg=colour61
set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour240
set -g message-style bg=colour235,fg=colour166

#set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# pane number display
set -g display-panes-active-colour colour166 #blue
set -g display-panes-colour colour33 #orange

# clock
setw -g clock-mode-colour colour64 #green



# -----------------------------------------------------------------------------
# INTEGRAZIONE CON NEOVIM
# -----------------------------------------------------------------------------
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
